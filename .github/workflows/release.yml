name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-refs.outputs.tag }}
      version: ${{ steps.get-refs.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Extract refs
        id: get-refs
        run: |
          echo GITHUB_REF=$GITHUB_REF
          TAG=${GITHUB_REF/refs\/tags\//}
          # VERSION=${GITHUB_REF#refs/*/}
          VERSION=${GITHUB_REF/refs\/tags\/v/}
          echo ::debug::setup TAG: $TAG
          echo ::debug::setup VERSION: $VERSION

          echo "::set-output name=tag::$TAG"
          echo "::set-output name=version::$VERSION"

  linux:
    needs: setup
    env:
      TARGET_DIR: target/release

    runs-on: ubuntu-latest
    steps:
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - uses: actions/checkout@v2

      - name: Install cargo deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: Build debian package
        shell: bash
        run: |
          cargo deb -p tera-cli

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tera-cli-linux_amd64-${{ needs.setup.outputs.tag }}
          path: |
            target/debian/*.deb

  create_draft:
    needs: ["linux", "setup"]
    name: Create Draft
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Get Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Generate changelog
        id: change_log
        run: |
          OUT=`git log $(git describe --tags --abbrev=0)..HEAD --oneline`
          echo "::set-output name=changes::$OUT"

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Srtool ${{ needs.setup.outputs.tag }}
          body: |
            # Description
            You can find the changelogs below.

            # Downloads
            Download the binary for your OS from below:
            - **Linux**
              - [deb package](https://github.com/chevdor/tera-cli/releases/download/${{ needs.setup.outputs.tag }}/tera-cli-linux_amd64-${{ needs.setup.outputs.tag }}.deb)

            # Release Highlights
            ----
            These were the highlights. Check below for the full changelog :point_down:
            ${{ steps.change_log.outputs.changes }}
          draft: true
