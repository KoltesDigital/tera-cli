name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  # setup:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     tag: ${{ steps.get-refs.outputs.tag }}
  #     version: ${{ steps.get-refs.outputs.version }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Extract refs
  #       id: get-refs
  #       run: |
  #         echo GITHUB_REF=$GITHUB_REF
  #         TAG=${GITHUB_REF/refs\/tags\//}
  #         # VERSION=${GITHUB_REF#refs/*/}
  #         VERSION=${GITHUB_REF/refs\/tags\/v/}
  #         echo ::debug::setup TAG: $TAG
  #         echo ::debug::setup VERSION: $VERSION

  #         echo "::set-output name=tag::$TAG"
  #         echo "::set-output name=version::$VERSION"

  linux:
    env:
      TARGET_DIR: target/release

    runs-on: ubuntu-latest
    steps:
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - uses: actions/checkout@v2
      - name: Install cargo deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: Build debian package
        shell: bash
        run: |
          cargo deb -p tera-cli -o "tera-cli_linux_amd64.deb"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux
          path: "tera-cli_linux_amd64.deb"

  create_draft:
    needs: ["linux"]
    name: Create Draft
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.create-release.outputs.html_url }}
      asset_upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Get Release Version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV
      - uses: actions/download-artifact@v2

      - name: Generate changelog
        id: change_log
        run: |
          JSON=$(git log \
            --pretty=format:'{%n  "commit": "%H",%n  "author": "%aN <%aE>",%n  "date": "%ad",%n  "message": "%f"%n},' \
            $@ | \
            perl -pe 'BEGIN{print "["}; END{print "]\n"}' | \
            perl -pe 's/},]/}]/')
          echo "::set-output name=changes::$JSON"

      - name: Create Draft Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}-${{ env.SHORT_SHA }}
          release_name: Tera ${{ env.RELEASE_VERSION }} (${{ env.SHORT_SHA }})
          body: |
            # Description
            You can find the changelogs below.

            # Downloads
            Download the binary for your OS from below:
            - **Linux**
              - [deb package](https://github.com/chevdor/tera-cli/releases/download/${{ env.RELEASE_VERSION }}/linux/tera-cli_linux_amd64.deb)

            # Release Highlights
            ----
            These were the highlights. Check below for the full changelog :point_down:
            ${{ steps.change_log.outputs.changes }}
          draft: true

  publish-binaries:
    runs-on: ubuntu-latest
    needs: ["create_draft"]
    steps:
      - uses: actions/checkout@v2
      - name: Get Release Version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "SHORT_SHA=${GITHUB_SHA::8}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v2

      - name: Upload binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_draft.outputs.asset_upload_url }}
          asset_path: "linux/tera-cli_linux_amd64.deb"
          asset_name: "tera-cli_linux_amd64.deb"
          asset_content_type: application/vnd.debian.binary-package
